# Task-Tide: AI-Powered Task Scheduler
# Docker Compose configuration for full-stack deployment

version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: task-tide-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:8080
    volumes:
      - task-tide-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - task-tide-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task-tide-backend.rule=Host(`api.task-tide.localhost`)"
      - "traefik.http.services.task-tide-backend.loadbalancer.server.port=3001"

  # Frontend application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    container_name: task-tide-frontend
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - BACKEND_URL=http://backend:3001
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - task-tide-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task-tide-frontend.rule=Host(`task-tide.localhost`)"
      - "traefik.http.services.task-tide-frontend.loadbalancer.server.port=80"

  # Development service (optional)
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: task-tide-dev
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/frontend/node_modules
      - /app/backend/node_modules
    environment:
      - NODE_ENV=development
    profiles:
      - dev
    networks:
      - task-tide-network

# Networks
networks:
  task-tide-network:
    driver: bridge
    name: task-tide-network

# Volumes
volumes:
  task-tide-data:
    driver: local
    name: task-tide-data